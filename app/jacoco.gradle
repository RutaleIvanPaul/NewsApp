task jacocoTestReport(type: JacocoReport, dependsOn: ['clean', 'test']) {
    description = 'Generate JaCoCo coverage report'
    group = 'Reporting'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*',
            'com/kotlin/ivanpaulrutale/newsapp/adapters/*',
            'com/kotlin/ivanpaulrutale/newsapp/providers/*',
            'com/kotlin/ivanpaulrutale/newsapp/views/*',
            'com/kotlin/ivanpaulrutale/newsapp/database/*'
    ]

    def kotlinDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)

    classDirectories = files([kotlinDebugTree])
    sourceDirectories = files(["src/main/java"])
    executionData = fileTree(
            dir: "$buildDir",
            include: ['**/*.exec', '**/*.ec']
    )
}
